{
  "descripcion": "El **Broken Authentication** es una de las vulnerabilidades más críticas en aplicaciones web. Ocurre cuando los mecanismos de autenticación y gestión de sesiones no están correctamente implementados, permitiendo a los atacantes comprometer cuentas de usuarios, acceder a información sensible o realizar acciones como si fueran otros usuarios.\n\nLas causas más comunes incluyen:\n\n- Mensajes de error distintos para usuarios y contraseñas incorrectas, facilitando la enumeración de usuarios.\n- Permitir intentos ilimitados de login, lo que facilita ataques de fuerza bruta y credential stuffing.\n- Permitir contraseñas débiles o predecibles.\n- No invalidar sesiones tras cerrar sesión o cambiar la contraseña.\n- Gestión insegura de cookies de sesión (sin HttpOnly, Secure, SameSite, etc).\n- Recuperación de contraseña insegura, permitiendo el secuestro de cuentas.\n- No regenerar el identificador de sesión tras el login (session fixation).\n\n**Impacto:** Un atacante puede acceder a cuentas ajenas, escalar privilegios, robar información sensible o realizar acciones en nombre de otros usuarios.\n\n**¿Quieres saber más?** Consulta estos recursos recomendados:\n\n- [OWASP Top 10: Broken Authentication](https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/)\n- [PortSwigger Web Security Academy: Authentication](https://portswigger.net/web-security/authentication)\n",
  "descripcionEjercicios": "## Ejercicio: Explota Broken Authentication\n\n**Contexto:** Imagina que eres un atacante y tienes acceso al formulario de login de una aplicación. \nTu objetivo es explotar fallos de autenticación para acceder a cuentas de otros usuarios, descubrir usuarios válidos o realizar fuerza bruta.\n\n1. Accede al entorno vulnerable del login.\n2. Prueba a introducir usuarios y contraseñas incorrectos y observa los mensajes de error.\n3. Intenta descubrir usuarios válidos o acceder a cuentas usando fuerza bruta.\n4. Según el nivel de dificultad, el sistema puede mostrar mensajes distintos, permitir intentos ilimitados o tener protección.\n",
  "pistas": {
    "facil": "Prueba a introducir un usuario que no exista y observa el mensaje de error. Luego prueba con un usuario válido y una contraseña incorrecta. ¿Notas la diferencia? Intenta también hacer muchos intentos de login seguidos.",
    "medio": "Los mensajes de error son genéricos, pero puedes probar fuerza bruta: intenta muchas contraseñas para un usuario conocido. Observa si hay algún tipo de bloqueo o retraso.",
    "dificil": "Hay límite de intentos, pero no hay captcha. Intenta varios intentos rápidos y observa si te bloquean temporalmente. ¿Puedes saltarte el límite de alguna forma?",
    "imposible": "El sistema está protegido: mensajes de error genéricos, límite de intentos y captcha. No deberías poder explotar la autenticación."
  },
  "soluciones": {
    "facil": "1. Introduce un usuario que no exista, por ejemplo `noexiste`. Verás un mensaje como \"Usuario no encontrado\".\n2. Introduce un usuario válido (`admin`) y una contraseña incorrecta. Verás \"Contraseña incorrecta\".\n3. Esto permite a un atacante enumerar usuarios válidos.\n4. Además, puedes probar muchas contraseñas seguidas sin ser bloqueado (fuerza bruta).",
    "medio": "1. Introduce cualquier usuario y contraseña incorrectos. El mensaje será siempre el mismo, pero puedes probar muchas combinaciones rápidamente.\n2. Haz fuerza bruta sobre un usuario conocido (por ejemplo, `admin`), probando contraseñas comunes.\n3. Como no hay límite de intentos, puedes descubrir la contraseña si es débil.",
    "dificil": "1. Haz varios intentos de login fallidos rápidamente. Tras cierto número, el sistema te bloqueará temporalmente.\n2. Intenta saltarte el límite cambiando de IP o usando otro navegador.\n3. Si no puedes, el sistema está parcialmente protegido, pero aún no hay captcha.",
    "imposible": "1. Los mensajes de error son siempre genéricos.\n2. Hay límite de intentos y captcha tras varios fallos.\n3. No puedes explotar la autenticación ni por enumeración ni por fuerza bruta."
  },
  "explicaciones": {
    "facil": "### Nivel Fácil\nEl backend muestra mensajes de error distintos para usuario inexistente y contraseña incorrecta, y no hay límite de intentos. Esto permite enumerar usuarios y hacer fuerza bruta.\n\n```python\nif not usuario_existe(username):\n    return \"Usuario no encontrado\"\nif not password_correcta(username, password):\n    return \"Contraseña incorrecta\"\n# Sin límite de intentos\n```\nUn atacante puede descubrir usuarios válidos y probar muchas contraseñas sin restricción.",
    "medio": "### Nivel Medio\nEl backend muestra siempre el mismo mensaje de error, pero no hay límite de intentos. Esto evita la enumeración de usuarios, pero permite fuerza bruta.\n\n```python\nif not usuario_existe(username) or not password_correcta(username, password):\n    return \"Usuario o contraseña incorrectos\"\n# Sin límite de intentos\n```\nUn atacante no puede saber si el usuario existe, pero puede probar muchas contraseñas para un usuario conocido.",
    "dificil": "### Nivel Difícil\nEl backend muestra mensajes genéricos y limita el número de intentos de login. Tras varios fallos, bloquea temporalmente el acceso.\n\n```python\nif intentos_fallidos > 5:\n    bloquear_usuario_temporalmente(username)\n    return \"Demasiados intentos, inténtalo más tarde\"\nif not usuario_existe(username) or not password_correcta(username, password):\n    return \"Usuario o contraseña incorrectos\"\n```\nEsto dificulta la fuerza bruta, pero aún no hay captcha.",
    "imposible": "### Nivel Imposible\nEl backend muestra mensajes genéricos, limita los intentos y añade captcha tras varios fallos. Además, exige contraseñas fuertes.\n\n```python\nif intentos_fallidos > 5:\n    mostrar_captcha()\n    return \"Demasiados intentos, resuelve el captcha\"\nif not usuario_existe(username) or not password_correcta(username, password):\n    return \"Usuario o contraseña incorrectos\"\n# Contraseñas fuertes obligatorias\n```\nAsí se evita la explotación de la autenticación rota."
  },
  "ejemplo": "### Ejemplo 1: Enumeración de usuarios\nUn formulario de login muestra mensajes distintos si el usuario existe o no:\n\n```\nUsuario no encontrado\nContraseña incorrecta\n```\n\nEsto permite a un atacante descubrir usuarios válidos.\n\n---\n\n### Ejemplo 2: Fuerza bruta sin límite\nEl sistema permite infinitos intentos de login sin bloquear ni retrasar.\n\n```\nPOST /login (sin límite de intentos)\n```\n\nUn atacante puede probar miles de contraseñas rápidamente."
}